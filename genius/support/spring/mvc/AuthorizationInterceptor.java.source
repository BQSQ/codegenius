package org.fishlab.codegenius.support.spring.mvc;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

public class AuthorizationInterceptor implements HandlerInterceptor {
	private List<String> excludedUrls;
	private String attribute;

	public void setExcludedUrls(List<String> excludedUrls) {
		this.excludedUrls = excludedUrls;
	}

	@Override
	public boolean preHandle(HttpServletRequest request,
			HttpServletResponse response, Object handler) throws Exception {
		String requestUri = request.getRequestURI();
		for (int i=0;i<this.excludedUrls.size();i++) {
			if (requestUri.endsWith(this.excludedUrls.get(i))) {
				return true;
			}
		}

		HttpSession session = request.getSession();
		if (session.getAttribute(attribute) == null) {
			throw new AuthorizationException();
		} else {
			return true;
		}
	}

	@Override
	public void afterCompletion(HttpServletRequest arg0,
			HttpServletResponse arg1, Object arg2, Exception arg3)
			throws Exception {

	}

	@Override
	public void postHandle(HttpServletRequest arg0, HttpServletResponse arg1,
			Object arg2, ModelAndView arg3) throws Exception {

	}

	public void setAttribute(String attribute) {
		this.attribute = attribute;
	}
	
	
}
